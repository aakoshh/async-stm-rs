# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  rust-nightly:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    #      https://circleci.com/developer/images/image/cimg/rust
    #      https://github.com/rust-lang/docker-rust-nightly
    docker:
      - image: rustlang/rust:nightly
    working_directory: /home/build

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  cargo-fetch:
    executor: rust-nightly
    steps:
      - checkout

      - run:
          name: Get head hash of cargo registry index
          command: |
            git ls-remote --heads https://github.com/rust-lang/crates.io-index.git master |
              cut -f 1 | tee .circleci/crates.io-index.head

      - restore_cache:
          name: Restore cargo registry index from cache
          keys:
            - cargo-index-v1-{{ checksum ".circleci/crates.io-index.head" }}
            - cargo-index-v1-

      - run:
          name: Generate Cargo.lock
          command: |
            cargo generate-lockfile

      - restore_cache:
          name: Restore dependency crates from cache
          keys:
            - cargo-deps-v1-{{ checksum "Cargo.lock" }}

      - run:
          name: Fetch dependencies
          command: cargo fetch

      - run:
          name: Update head hash of cargo registry index
          command: |
            cat /usr/local/cargo/registry/index/*/.git/FETCH_HEAD |
              grep -F 'github.com/rust-lang/crates.io-index' |
              cut -f 1 > .circleci/crates.io-index.head

      - save_cache:
          name: Save cargo registry index into cache
          key: cargo-index-v1-{{ checksum ".circleci/crates.io-index.head" }}
          paths:
            - /usr/local/cargo/registry/index

      - save_cache:
          name: Save dependency crates into cache
          key: cargo-deps-v1-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry/cache
            - /usr/local/cargo/git/db

      - persist_to_workspace:
          root: .
          paths:
            - .circleci/crates.io-index.head


  build-and-test:
    executor: rust-nightly

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      - attach_workspace:
          at: .

      - restore_cache:
          name: Restore cargo registry index from cache
          keys:
            - cargo-index-v1-{{ checksum ".circleci/crates.io-index.head" }}

      - restore_cache:
          name: Restore dependency crates from cache
          keys:
            - cargo-deps-v1-{{ checksum "Cargo.lock" }}

      - run:
          name: Print version information
          command: rustc --version; cargo --version

      - run:
          name: Check code formatting
          command: cargo fmt --all -- --check

      - run:
          name: Build all
          environment:
            RUSTFLAGS: -D warnings
            CARGO_INCREMENTAL: 0
          command: cargo build --all-targets --all-features

      # See here for how to allow certain lints to not fail the build:
      # https://github.com/rust-lang/rust-clippy
      - run:
          name: Check clippy warnings
          command: cargo clippy --all-features -- -D clippy::all

      - run:
          name: Run tests
          environment:
            RUST_BACKTRACE: 1
            CARGO_INCREMENTAL: 0
          command: cargo test --all-features

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  platform:
    jobs:
      - cargo-fetch
      - build-and-test:
          requires:
            - cargo-fetch
